#!/bin/bash
# Borrows heavily from SeÃ¡n C. McCord's https://github.com/Ulexus/docker-ceph repository

set -e

CEPH_CLUSTER=${CEPH_CLUSTER:-ceph}
ETCD_PATH="/ceph/$CEPH_CLUSTER"
ETCD_PORT=${ETCD_PORT:-4001}
ETCD="$HOST:$ETCD_PORT"
NUM_STORES=${NUM_STORES:-3}
PG_NUM=${PG_NUM:-128} # default for 3 OSDs
HOSTNAME=`hostname`

function etcd_set_default {
  set +e
  etcdctl --no-sync -C $ETCD mk $ETCD_PATH/$1 $2 >/dev/null 2>&1
  if [[ $? -ne 0 && $? -ne 4 ]]; then
    echo "etcd_set_default: an etcd error occurred. aborting..."
    exit 1
  fi
  set -e
}

function etcd_set {
    etcdctl --no-sync -C $ETCD set ${ETCD_PATH}$1 $2 >/dev/null
}

if ! etcdctl --no-sync -C $ETCD get ${ETCD_PATH}/setup/complete >/dev/null 2>&1 ; then
  echo -n "Ceph hasn't yet been deployed. "
  if etcdctl --no-sync -C $ETCD mk ${ETCD_PATH}/setup/lock $HOSTNAME >/dev/null 2>&1 \
  || [[ `etcdctl --no-sync -C $ETCD get ${ETCD_PATH}/setup/lock` == "$HOSTNAME" ]] ; then
    echo "Bootstrapping..."

    # set some defaults in etcd if they're not passed in as environment variables
    # these are templated in ceph.conf
    etcd_set_default size ${NUM_STORES}
    etcd_set_default minSize 1
    etcd_set_default pgNum ${PG_NUM}
    etcd_set_default delayStart 15

    # Generate administrator key
    ceph-authtool /etc/ceph/ceph.client.admin.keyring --create-keyring --gen-key -n client.admin --set-uid=0 --cap mon 'allow *' --cap osd 'allow *' --cap mds 'allow'

    # Generate the mon. key
    ceph-authtool /etc/ceph/ceph.mon.keyring --create-keyring --gen-key -n mon. --cap mon 'allow *'

    fsid=$(uuidgen)
    etcd_set /fsid ${fsid}

    # Generate initial monitor map
    monmaptool --create --add ${HOSTNAME} ${HOST} --fsid ${fsid} /etc/ceph/monmap

    etcdctl --no-sync -C $ETCD set ${ETCD_PATH}/keyrings/monitor < /etc/ceph/ceph.mon.keyring >/dev/null
    etcdctl --no-sync -C $ETCD set ${ETCD_PATH}/keyrings/client.admin < /etc/ceph/ceph.client.admin.keyring >/dev/null

    # mark setup as complete
    echo "Bootstrapping complete!"
    etcd_set /setup/complete yup
  else
      echo "Waiting for another monitor to complete bootstrapping..."
    until etcdctl --no-sync -C $ETCD get ${ETCD_PATH}/setup/complete >/dev/null 2>&1 ; do
      echo "Waiting..."
      sleep 5
    done
  fi
fi

until confd -onetime -node $ETCD -config-file /etc/confd/confd.toml -prefix $ETCD_PATH >/dev/null 2>&1; do
  echo "Waiting for confd to write initial templates..."
  sleep 5
done

# If we don't have a monitor keyring, this is a new monitor
if [ ! -e /var/lib/ceph/mon/ceph-${HOSTNAME}/keyring ]; then
  if [ ! -f /etc/ceph/monmap ]; then
    ceph mon getmap -o /etc/ceph/monmap
  fi

  # Import the client.admin keyring and the monitor keyring into a new, temporary one
  ceph-authtool /tmp/ceph.mon.keyring --create-keyring --import-keyring /etc/ceph/ceph.client.admin.keyring
  ceph-authtool /tmp/ceph.mon.keyring --import-keyring /etc/ceph/ceph.mon.keyring

  # Make the monitor directory
  mkdir -p /var/lib/ceph/mon/ceph-${HOSTNAME}

  # Prepare the monitor daemon's directory with the map and keyring
  ceph-mon --mkfs -i ${HOSTNAME} --monmap /etc/ceph/monmap --keyring /tmp/ceph.mon.keyring

  # Clean up the temporary key
  rm /tmp/ceph.mon.keyring
fi

exec /usr/bin/ceph-mon -d -i ${HOSTNAME} --public-addr ${HOST}:6789
